{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "adfdevm77kkznmognla"
		},
		"AlphaVantageAPIHTTP_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://www.alphavantage.co"
		},
		"AlphaVantageAPIRestLS_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://www.alphavantage.co"
		},
		"KeyVault_properties_typeProperties_baseUrl": {
			"type": "string",
			"defaultValue": "https://keyvaultAzure12550.vault.azure.net/"
		},
		"StagingDatabase_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "sqldevm77kkznmognla.database.windows.net"
		},
		"StagingDatabase_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "sqldbFinance"
		},
		"StagingRawContainer_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://stadevm77kkznmognla.dfs.core.windows.net/"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/pipeline1 Test')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "get_api_key",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"method": "GET",
							"headers": {},
							"url": "https://keyvaultazure12550.vault.azure.net/secrets/alpha-vantage-api-token/33db193ee5ed4ee7a9e5e0fb79a30001?api-version=7.5",
							"authentication": {
								"type": "MSI",
								"resource": "https://vault.azure.net/"
							}
						}
					},
					{
						"name": "set_api_key",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "get_api_key",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "api_key",
							"value": {
								"value": "@activity('get_api_key').output.value",
								"type": "Expression"
							}
						}
					},
					{
						"name": "copy API data",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "set_api_key",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "set_file_path",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "HttpReadSettings",
									"requestMethod": "GET"
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "AlphaVantageAPIDatasetCSV",
								"type": "DatasetReference",
								"parameters": {
									"symbol": {
										"value": "@variables('symbol')",
										"type": "Expression"
									},
									"apikey": {
										"value": "@variables('api_key')",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "StagingRawContainerCSVLS",
								"type": "DatasetReference",
								"parameters": {
									"file_path": {
										"value": "@variables('file_path')",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "set_file_path",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "file_path",
							"value": {
								"value": "@concat('stock_raw/', formatDateTime(utcNow(),'yyyyMMddHHmmss'))",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Stage to SQL Server",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "copy API data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "csvToSQLFlow",
								"type": "DataFlowReference",
								"parameters": {
									"file_path": {
										"value": "'@{variables('file_path')}'",
										"type": "Expression"
									},
									"symbol": {
										"value": "'@{variables('symbol')}'",
										"type": "Expression"
									},
									"source": {
										"value": "'@{variables('source')}'",
										"type": "Expression"
									}
								},
								"datasetParameters": {
									"AlphaVantageCSV": {
										"file_path": {
											"value": "@variables('file_path')",
											"type": "Expression"
										}
									},
									"databaseSink": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"api_key": {
						"type": "String"
					},
					"symbol": {
						"type": "String",
						"defaultValue": "NVDA"
					},
					"file_path": {
						"type": "String",
						"defaultValue": "stock_raw/20251013010517"
					},
					"source": {
						"type": "String",
						"defaultValue": "Alpha Vantage"
					}
				},
				"folder": {
					"name": "test folder"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/AlphaVantageAPIDatasetCSV')]",
				"[concat(variables('factoryId'), '/datasets/StagingRawContainerCSVLS')]",
				"[concat(variables('factoryId'), '/dataflows/csvToSQLFlow')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AlphaVantageAPIDataset')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AlphaVantageAPIRestLS",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"apikey": {
						"type": "string"
					},
					"symbol": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "RestResource",
				"typeProperties": {
					"relativeUrl": {
						"value": "@concat(\n  '/query?function=TIME_SERIES_DAILY',\n  '&symbol=', encodeUriComponent(dataset().symbol),\n  '&outputsize=compact',\n  '&datatype=csv',\n  '&apikey=', dataset().apikey\n)",
						"type": "Expression"
					}
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AlphaVantageAPIRestLS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AlphaVantageAPIDatasetCSV')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AlphaVantageAPIHTTP",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"symbol": {
						"type": "string"
					},
					"apikey": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "HttpServerLocation",
						"relativeUrl": {
							"value": "@concat(\n  '/query?function=TIME_SERIES_DAILY',\n  '&symbol=', encodeUriComponent(dataset().symbol),\n  '&outputsize=compact',\n  '&datatype=csv',\n  '&apikey=', dataset().apikey\n)",
							"type": "Expression"
						}
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AlphaVantageAPIHTTP')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/StagingDatabaseServer')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "StagingDatabase",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "load_id",
						"type": "uniqueidentifier"
					},
					{
						"name": "load_ts_utc",
						"type": "datetime2",
						"scale": 0
					},
					{
						"name": "source_system",
						"type": "varchar"
					},
					{
						"name": "symbol",
						"type": "varchar"
					},
					{
						"name": "price_date",
						"type": "date"
					},
					{
						"name": "open_price",
						"type": "decimal",
						"precision": 18,
						"scale": 6
					},
					{
						"name": "high_price",
						"type": "decimal",
						"precision": 18,
						"scale": 6
					},
					{
						"name": "low_price",
						"type": "decimal",
						"precision": 18,
						"scale": 6
					},
					{
						"name": "close_price",
						"type": "decimal",
						"precision": 18,
						"scale": 6
					},
					{
						"name": "volume",
						"type": "bigint",
						"precision": 19
					}
				],
				"typeProperties": {
					"schema": "stg",
					"table": "prices_raw"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/StagingDatabase')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/StagingRawContainerCSVLS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "StagingRawContainer",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"file_path": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "alpha_vantage.csv",
						"folderPath": {
							"value": "@dataset().file_path",
							"type": "Expression"
						},
						"fileSystem": "raw-alpha-vantage"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/StagingRawContainer')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/StagingRawContainerLS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "StagingRawContainer",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"file_path": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "alpha_vantage.json",
						"folderPath": {
							"value": "@dataset().file_path",
							"type": "Expression"
						},
						"container": "raw-alpha-vantage"
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/StagingRawContainer')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AlphaVantageAPIHTTP')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "HttpServer",
				"typeProperties": {
					"url": "[parameters('AlphaVantageAPIHTTP_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AlphaVantageAPIRestLS')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "RestService",
				"typeProperties": {
					"url": "[parameters('AlphaVantageAPIRestLS_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/KeyVault')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureKeyVault",
				"typeProperties": {
					"baseUrl": "[parameters('KeyVault_properties_typeProperties_baseUrl')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/StagingDatabase')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"server": "[parameters('StagingDatabase_properties_typeProperties_server')]",
					"database": "[parameters('StagingDatabase_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": false,
					"authenticationType": "SystemAssignedManagedIdentity"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/StagingRawContainer')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('StagingRawContainer_properties_typeProperties_url')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/csvToSQLFlow')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "StagingRawContainerCSVLS",
								"type": "DatasetReference"
							},
							"name": "AlphaVantageCSV"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "StagingDatabaseServer",
								"type": "DatasetReference"
							},
							"name": "databaseSink"
						}
					],
					"transformations": [
						{
							"name": "sourceDerived"
						}
					],
					"scriptLines": [
						"parameters{",
						"     file_path as string,",
						"     symbol as string,",
						"     source as string",
						"}",
						"source(output(",
						"          timestamp as date,",
						"          open as double,",
						"          high as double,",
						"          low as double,",
						"          close as double,",
						"          volume as integer",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> AlphaVantageCSV",
						"AlphaVantageCSV derive(source = $source,",
						"          symbol = $symbol) ~> sourceDerived",
						"sourceDerived sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          load_id as string,",
						"          load_ts_utc as timestamp,",
						"          source_system as string,",
						"          symbol as string,",
						"          price_date as date,",
						"          open_price as decimal(18,6),",
						"          high_price as decimal(18,6),",
						"          low_price as decimal(18,6),",
						"          close_price as decimal(18,6),",
						"          volume as long",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          symbol,",
						"          price_date = timestamp,",
						"          open_price = open,",
						"          high_price = high,",
						"          low_price = low,",
						"          close_price = close,",
						"          volume,",
						"          source_system = source",
						"     )) ~> databaseSink"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/StagingRawContainerCSVLS')]",
				"[concat(variables('factoryId'), '/datasets/StagingDatabaseServer')]"
			]
		}
	]
}